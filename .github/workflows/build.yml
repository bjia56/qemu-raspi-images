name: Build

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

jobs:
  build_raspi_image:
    name: Build 64 bit raspberry pi image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install QEMU and dependencies
        run: |
          sudo apt-get update -qq >/dev/null
          sudo apt-get install -y -qq qemu-system traceroute >/dev/null
          qemu-system-aarch64 -version

      - name: Get raspberry pi image from cache
        id: image-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: raspi.img.xz
          key: raspios_lite_arm64-2023-02-22

      - name: Download raspberry pi image
        if: ${{ steps.image-cache-restore.outputs.cache-hit != 'true' }}
        run: |
          wget -O raspi.img.xz -q https://downloads.raspberrypi.org/raspios_lite_arm64/images/raspios_lite_arm64-2023-02-22/2023-02-21-raspios-bullseye-arm64-lite.img.xz

      - name: Cache image
        if: ${{ steps.image-cache-restore.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v3
        with:
          path: raspi.img.xz
          key: ${{ steps.image-cache-restore.outputs.cache-primary-key }}

      - name: Extract image
        run: |
          xz -d -v raspi.img.xz
          fdisk -l raspi.img

      - name: Extract kernel and dtb
        run: |
          sudo mkdir -p /mnt/raspi/
          sudo mount -v -o offset=4194304 -t vfat ./raspi.img /mnt/raspi/
          ls -la /mnt/raspi/

          cp /mnt/raspi/kernel8.img .
          cp /mnt/raspi/bcm2710-rpi-3-b-plus.dtb .

          sudo umount /mnt/raspi/

      - name: Configure root filesystem
        run: |
          sudo mkdir -p /mnt/raspi/
          sudo mount -v -o offset=272629760 -t ext4 ./raspi.img /mnt/raspi/
          ls -la /mnt/raspi/

          # allow 'pi' and 'root' to login without a password
          sudo sed -i '/^pi/d' /mnt/raspi/etc/passwd
          echo 'pi::1000:1000:,,,:/home/pi:/bin/bash' | sudo tee -a /mnt/raspi/etc/passwd 1> /dev/null
          sudo sed -i '/^root/d' /mnt/raspi/etc/passwd
          echo 'root::0:0:root:/root:/bin/bash' | sudo tee -a /mnt/raspi/etc/passwd 1> /dev/null
          echo 'PermitEmptyPasswords yes' | sudo tee -a /mnt/raspi/etc/ssh/sshd_config 1> /dev/null
          echo 'PermitRootLogin yes' | sudo tee -a /mnt/raspi/etc/ssh/sshd_config 1> /dev/null

          # allow appending to rc.local which is our way of injecting startup tasks
          sudo sed -i '/^exit/d' /mnt/raspi/etc/rc.local

          # stop unwanted services
          cat <<- "EOF" | sudo tee -a /mnt/raspi/etc/rc.local 1> /dev/null
            # automatic apt upgrades conflict with manual package installs
            systemctl disable apt-daily.timer
            systemctl disable apt-daily-upgrade.timer
            systemctl stop apt-daily.timer
            systemctl stop apt-daily-upgrade.timer
            # dhcp conflicts with our static ip
            systemctl stop dhcpcd.service
            systemctl disable dhcpcd.service 
          EOF

          # configure networking 
          cat <<- "EOF" | sudo tee -a /mnt/raspi/etc/rc.local 1> /dev/null
            # the network device can show up as either usb0 or eth0
            ip addr add 172.18.0.2/16 dev usb0 && ip link set up dev usb0 || true
            ip addr add 172.18.0.2/16 dev eth0 && ip link set up dev eth0 || true
            ip addr
            route add default gw 172.18.0.1 usb0 || true
            route add default gw 172.18.0.1 eth0 || true
            route -n
            ping -c 1 172.18.0.1
            curl -I http://google.com
          EOF
          sudo sed -i '/^host/d' /mnt/raspi/etc/nsswitch.conf
          echo 'hosts: files dns' | sudo tee -a /mnt/raspi/etc/nsswitch.conf 1> /dev/null

          # configure apt
          sudo mkdir -p /mnt/raspi/etc/apt/apt.conf.d/
          cat <<- "EOF" | sudo tee -a /mnt/raspi/etc/apt/apt.conf.d/99emulationhacks 1> /dev/null
            Acquire::http::Timeout "60";
            Acquire::ftp::Timeout "60";
            Acquire::Retries "10";
          EOF

          # enable sshd
          echo 'systemctl enable ssh.service' | sudo tee -a /mnt/raspi/etc/rc.local 1> /dev/null
          echo 'systemctl start ssh.service' | sudo tee -a /mnt/raspi/etc/rc.local 1> /dev/null

          # remove the password change banner
          sudo rm /mnt/raspi/etc/ssh/sshd_config.d/rename_user.conf

          sudo umount /mnt/raspi/

      - name: Resize disk
        run: |
          qemu-img resize raspi.img 16G

      - name: Initial boot
        run: |
          sudo ./files/run_vm.sh &
          ./files/wait_for_ssh.sh 172.18.0.2 22 pi
          ./files/wait_for_ssh.sh 172.18.0.2 22 root

      - name: Post-boot configuration
        run: |
          cat <<- "EOF" | ssh root@172.18.0.2 "/bin/bash -e"
            # Remove systemctl from rc.local 
            sed -i '/^systemctl/d' /etc/rc.local
            # Kernel and bootloader upgrades won't persist across reboots
            apt-mark hold raspberrypi-bootloader raspberrypi-kernel 
          EOF

      - name: Resize root partition
        run: |
          scp ./files/mmcblk0.layout pi@172.18.0.2:/tmp

          cat <<- "EOF" | ssh root@172.18.0.2 "/bin/bash -e"
            sfdisk --force /dev/mmcblk0 < /tmp/mmcblk0.layout
            rm /tmp/mmcblk0.layout
          EOF

      - name: Hard reboot and resize root filesystem
        run: |
          # Stop VM
          ssh root@172.18.0.2 halt || true
          sleep 1m
          sudo ./files/kill_vm.sh

          # Start VM
          sudo ./files/run_vm.sh &
          ./files/wait_for_ssh.sh 172.18.0.2 22 pi

          # Resize filesystem
          cat <<- "EOF" | ssh root@172.18.0.2 "/bin/bash -e"
            resize2fs /dev/mmcblk0p2
            df -H
          EOF

      - name: Prebake tools
        run: |
          cat ./files/install_tools.sh | ssh root@172.18.0.2 "/bin/bash -e"

      - name: Stop QEMU
        run: |
          ssh root@172.18.0.2 halt || true
          sleep 1m
          sudo ./files/kill_vm.sh

      - name: Compress filesystem
        run: |
          xz -v raspi.img

      - name: Archive img
        uses: actions/upload-artifact@v4
        with:
          name: raspi.img.xz
          path: ./raspi.img.xz

      - name: Archive kernel
        uses: actions/upload-artifact@v4
        with:
          name: kernel8.img
          path: ./kernel8.img

      - name: Archive dtb
        uses: actions/upload-artifact@v4
        with:
          name: bcm2710-rpi-3-b-plus.dtb
          path: ./bcm2710-rpi-3-b-plus.dtb

      - name: Gather diagnostics
        if: ${{ failure() || cancelled() }}
        run: |
          cat <<- "EOF" | ssh -o ConnectTimeout=30 root@172.18.0.2 /bin/bash
            systemctl status docker.service
            journalctl --no-pager -xu docker.service
          EOF

      - name: Force stop VM
        if: ${{ failure() || cancelled() }}
        run: |
          sudo ./files/kill_vm.sh
